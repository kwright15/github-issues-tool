{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fnil\fcharset0 .SFNS-Regular_wdth_opsz110000_GRAD_wght2580000;}
{\colortbl;\red255\green255\blue255;\red233\green160\blue109;\red19\green19\blue19;\red240\green240\blue240;
\red218\green124\blue212;\red205\green204\blue213;\red229\green189\blue123;\red114\green201\blue195;\red16\green16\blue16;
}
{\*\expandedcolortbl;;\cssrgb\c93725\c69020\c50196;\cssrgb\c9804\c9804\c9804;\cssrgb\c95294\c95294\c95294;
\cssrgb\c89020\c58039\c86275;\cssrgb\c83922\c83922\c86667;\cssrgb\c92157\c78431\c55294;\cssrgb\c50980\c82353\c80784;\cssrgb\c7843\c7843\c7843;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww27120\viewh25460\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 My Milvus\
/gh_issues_milvus/milvus177/\
\
\
CLI added for local use:\
Example: python gh-issues.py --repo org/repo --token $GH_TOKEN --output github_issues.csv --include-comments\
\
How to run locally\
# In your venv\
source venv/bin/activate\
pip install -r requirements.txt\
\
# Using env var\
export GH_TOKEN="your_token"\
python gh-issues.py --repo customer-success-management/data-watsonx --include-comments\
\
# Or pass token explicitly (avoids relying on env)\
python gh-issues.py --repo customer-success-management/data-watsonx --token "$GH_TOKEN" --output github_issues.csv --include-comments\
\
New CLI:\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
python\cf4  \cf5 gh_issues_tool.py\cf4  \cf6 \\\cf4 \cb1 \
\cb3   \cf5 --repo\cf4  \cf5 customer-success-management/data-watsonx\cf4  \cf6 \\\cf4 \cb1 \
\cb3   \cf5 --token\cf4  \cf5 "\cf6 $GH_TOKEN\cf5 "\cf4  \cf6 \\\cf4 \cb1 \
\cb3   \cf5 --include-comments\cf4  \cf6 \\\cf4 \cb1 \
\cb3   \cf5 --use-existing-if-recent\cf4  \cf6 \\\cf4 \cb1 \
\cb3   \cf5 --max-age-days\cf4  \cf7 7\cf4 \cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 \
\
\
export_github_issues\
Use this tool to retrieve all issues from a GitHub repository and save them to a CSV file. It includes key metadata (title, state, created/closed dates, labels), optional comments, and the GitHub Projects V2 \'93Status\'94 column via GraphQL. Useful for reporting, analytics, and handoffs.\
Use when you need a tabular export of issues for analysis or sharing.\
\
Test\
\{\
  "repo": "customer-success-management/data-watsonx",\
  "token": "$\{secrets.GH_TOKEN\}",\
  "include_comments": false,\
  "output_path": "github_issues_test.csv"\
\}\
\
New agent test\
\pard\pardeftab720\partightenfactor0

\f1 \cf4 \cb3 \expnd0\expndtw0\kerning0
\{\cb1 \
\cb3   \cf8 "repo"\cf4 : \cf5 "customer-success-management/data-watsonx"\cf4 ,\cb1 \
\cb3   \cf8 "token"\cf4 : \cf5 "$\{secrets.GH_TOKEN\}"\cf4 ,\cb1 \
\cb3   \cf8 "include_comments"\cf4 : false,\cb1 \
\cb3   \cf8 "output_path"\cf4 : \cf5 "github_issues.csv"\cf4 ,\cb1 \
\cb3   \cf8 "use_existing_if_recent"\cf4 : true,\cb1 \
\cb3   \cf8 "max_age_days"\cf4 : \cf7 7\cf4 \cb1 \
\cb3 \}\cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 \
\
JSON schema\
\pard\pardeftab720\partightenfactor0

\f1 \cf4 \cb3 \expnd0\expndtw0\kerning0
\{\cb1 \
\cb3   \cf8 "$schema"\cf4 : \cf5 "http://json-schema.org/draft-07/schema#"\cf4 ,\cb1 \
\cb3   \cf8 "title"\cf4 : \cf5 "export_github_issues input"\cf4 ,\cb1 \
\cb3   \cf8 "type"\cf4 : \cf5 "object"\cf4 ,\cb1 \
\cb3   \cf8 "additionalProperties"\cf4 : false,\cb1 \
\cb3   \cf8 "properties"\cf4 : \{\cb1 \
\cb3     \cf8 "repo"\cf4 : \{\cb1 \
\cb3       \cf8 "type"\cf4 : \cf5 "string"\cf4 ,\cb1 \
\cb3       \cf8 "description"\cf4 : \cf5 "Repository in 'org/name' format."\cf4 ,\cb1 \
\cb3       \cf8 "pattern"\cf4 : \cf5 "^[^/]+/[^/]+$"\cf4 ,\cb1 \
\cb3       \cf8 "examples"\cf4 : [\cf5 "customer-success-management/data-watsonx"\cf4 ]\cb1 \
\cb3     \},\cb1 \
\cb3     \cf8 "token"\cf4 : \{\cb1 \
\cb3       \cf8 "type"\cf4 : \cf5 "string"\cf4 ,\cb1 \
\cb3       \cf8 "description"\cf4 : \cf5 "GitHub token (map from secret)."\cf4 ,\cb1 \
\cb3       \cf8 "examples"\cf4 : [\cf5 "$\{secrets.GH_TOKEN\}"\cf4 ]\cb1 \
\cb3     \},\cb1 \
\cb3     \cf8 "include_comments"\cf4 : \{\cb1 \
\cb3       \cf8 "type"\cf4 : \cf5 "boolean"\cf4 ,\cb1 \
\cb3       \cf8 "description"\cf4 : \cf5 "Include all issue comments in the CSV."\cf4 ,\cb1 \
\cb3       \cf8 "default"\cf4 : true\cb1 \
\cb3     \},\cb1 \
\cb3     \cf8 "output_path"\cf4 : \{\cb1 \
\cb3       \cf8 "type"\cf4 : \cf5 "string"\cf4 ,\cb1 \
\cb3       \cf8 "description"\cf4 : \cf5 "Destination CSV file path."\cf4 ,\cb1 \
\cb3       \cf8 "default"\cf4 : \cf5 "github_issues.csv"\cf4 \cb1 \
\cb3     \},\cb1 \
\cb3     \cf8 "api_url"\cf4 : \{\cb1 \
\cb3       \cf8 "type"\cf4 : \cf5 "string"\cf4 ,\cb1 \
\cb3       \cf8 "description"\cf4 : \cf5 "GitHub REST base URL. Use https://api.github.com for public GitHub."\cf4 ,\cb1 \
\cb3       \cf8 "default"\cf4 : \cf5 "https://github.ibm.com/api/v3"\cf4 \cb1 \
\cb3     \},\cb1 \
\cb3     \cf8 "use_existing_if_recent"\cf4 : \{\cb1 \
\cb3       \cf8 "type"\cf4 : \cf5 "boolean"\cf4 ,\cb1 \
\cb3       \cf8 "description"\cf4 : \cf5 "Reuse existing CSV if newer than max_age_days."\cf4 ,\cb1 \
\cb3       \cf8 "default"\cf4 : true\cb1 \
\cb3     \},\cb1 \
\cb3     \cf8 "max_age_days"\cf4 : \{\cb1 \
\cb3       \cf8 "type"\cf4 : \cf5 "integer"\cf4 ,\cb1 \
\cb3       \cf8 "description"\cf4 : \cf5 "Maximum age in days to reuse existing CSV."\cf4 ,\cb1 \
\cb3       \cf8 "default"\cf4 : \cf7 7\cf4 ,\cb1 \
\cb3       \cf8 "minimum"\cf4 : \cf7 0\cf4 \cb1 \
\cb3     \}\cb1 \
\cb3   \},\cb1 \
\cb3   \cf8 "required"\cf4 : [\cf5 "repo"\cf4 , \cf5 "token"\cf4 ]\cb1 \
\cb3 \}\cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 \
\
You are a helpful assistant that uses tools to answer questions in detail. Most questions will be related to GitHub issues opened by Customer Success Managers (CSMs) looking for help from product teams.\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa40\partightenfactor0
\ls1\ilvl0
\f2\fs26 \cf4 \cb9 {\listtext	\uc0\u8226 	}\
\pard\pardeftab720\sa160\partightenfactor0
\ls2\ilvl0
\f3\b\fs27\fsmilli13800 \cf4 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
New\'a0parameters your\'a0agent\'a0can\'a0set\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa40\partightenfactor0
\ls2\ilvl0
\f2\b0\fs26 \cf4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
use_existing_if_recent\'a0(boolean, default\'a0true): Reuse\'a0the existing CSV if\'a0it\'92s\'a0recent.\cb1 \
\ls2\ilvl0\cb9 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
max_age_days\'a0(integer, default\'a07): Maximum allowed\'a0age in\'a0days\'a0to\'a0reuse.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa40\partightenfactor0
\ls2\ilvl0\cf4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa40\partightenfactor0
\cf4 \
}